case 0: {
  F0 f = reinterpret_cast<F0>(function_ptr);
  venom_ret_cell ret = f(ctx);
  ctx->program_stack.push(ret);
  break;
}
case 1: {
  F1 f = reinterpret_cast<F1>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  break;
}
case 2: {
  F2 f = reinterpret_cast<F2>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  break;
}
case 3: {
  F3 f = reinterpret_cast<F3>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  break;
}
case 4: {
  F4 f = reinterpret_cast<F4>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  break;
}
case 5: {
  F5 f = reinterpret_cast<F5>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  break;
}
case 6: {
  F6 f = reinterpret_cast<F6>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  break;
}
case 7: {
  F7 f = reinterpret_cast<F7>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  break;
}
case 8: {
  F8 f = reinterpret_cast<F8>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  break;
}
case 9: {
  F9 f = reinterpret_cast<F9>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  break;
}
case 10: {
  F10 f = reinterpret_cast<F10>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  break;
}
case 11: {
  F11 f = reinterpret_cast<F11>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  break;
}
case 12: {
  F12 f = reinterpret_cast<F12>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  break;
}
case 13: {
  F13 f = reinterpret_cast<F13>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  break;
}
case 14: {
  F14 f = reinterpret_cast<F14>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  break;
}
case 15: {
  F15 f = reinterpret_cast<F15>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  break;
}
case 16: {
  F16 f = reinterpret_cast<F16>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  break;
}
case 17: {
  F17 f = reinterpret_cast<F17>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  break;
}
case 18: {
  F18 f = reinterpret_cast<F18>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg17 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 17)) arg17.decRef();
  break;
}
case 19: {
  F19 f = reinterpret_cast<F19>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg17 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg18 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 17)) arg17.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 18)) arg18.decRef();
  break;
}
case 20: {
  F20 f = reinterpret_cast<F20>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg17 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg18 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg19 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 17)) arg17.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 18)) arg18.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 19)) arg19.decRef();
  break;
}
case 21: {
  F21 f = reinterpret_cast<F21>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg17 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg18 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg19 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg20 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 17)) arg17.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 18)) arg18.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 19)) arg19.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 20)) arg20.decRef();
  break;
}
case 22: {
  F22 f = reinterpret_cast<F22>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg17 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg18 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg19 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg20 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg21 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 17)) arg17.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 18)) arg18.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 19)) arg19.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 20)) arg20.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 21)) arg21.decRef();
  break;
}
case 23: {
  F23 f = reinterpret_cast<F23>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg17 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg18 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg19 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg20 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg21 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg22 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 17)) arg17.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 18)) arg18.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 19)) arg19.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 20)) arg20.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 21)) arg21.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 22)) arg22.decRef();
  break;
}
case 24: {
  F24 f = reinterpret_cast<F24>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg17 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg18 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg19 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg20 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg21 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg22 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg23 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 17)) arg17.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 18)) arg18.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 19)) arg19.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 20)) arg20.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 21)) arg21.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 22)) arg22.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 23)) arg23.decRef();
  break;
}
case 25: {
  F25 f = reinterpret_cast<F25>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg17 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg18 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg19 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg20 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg21 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg22 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg23 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg24 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 17)) arg17.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 18)) arg18.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 19)) arg19.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 20)) arg20.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 21)) arg21.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 22)) arg22.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 23)) arg23.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 24)) arg24.decRef();
  break;
}
case 26: {
  F26 f = reinterpret_cast<F26>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg17 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg18 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg19 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg20 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg21 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg22 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg23 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg24 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg25 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 17)) arg17.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 18)) arg18.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 19)) arg19.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 20)) arg20.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 21)) arg21.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 22)) arg22.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 23)) arg23.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 24)) arg24.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 25)) arg25.decRef();
  break;
}
case 27: {
  F27 f = reinterpret_cast<F27>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg17 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg18 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg19 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg20 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg21 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg22 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg23 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg24 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg25 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg26 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 17)) arg17.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 18)) arg18.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 19)) arg19.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 20)) arg20.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 21)) arg21.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 22)) arg22.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 23)) arg23.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 24)) arg24.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 25)) arg25.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 26)) arg26.decRef();
  break;
}
case 28: {
  F28 f = reinterpret_cast<F28>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg17 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg18 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg19 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg20 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg21 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg22 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg23 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg24 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg25 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg26 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg27 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 17)) arg17.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 18)) arg18.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 19)) arg19.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 20)) arg20.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 21)) arg21.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 22)) arg22.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 23)) arg23.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 24)) arg24.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 25)) arg25.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 26)) arg26.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 27)) arg27.decRef();
  break;
}
case 29: {
  F29 f = reinterpret_cast<F29>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg17 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg18 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg19 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg20 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg21 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg22 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg23 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg24 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg25 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg26 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg27 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg28 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 17)) arg17.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 18)) arg18.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 19)) arg19.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 20)) arg20.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 21)) arg21.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 22)) arg22.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 23)) arg23.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 24)) arg24.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 25)) arg25.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 26)) arg26.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 27)) arg27.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 28)) arg28.decRef();
  break;
}
case 30: {
  F30 f = reinterpret_cast<F30>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg17 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg18 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg19 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg20 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg21 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg22 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg23 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg24 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg25 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg26 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg27 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg28 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg29 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28, arg29);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 17)) arg17.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 18)) arg18.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 19)) arg19.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 20)) arg20.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 21)) arg21.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 22)) arg22.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 23)) arg23.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 24)) arg24.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 25)) arg25.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 26)) arg26.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 27)) arg27.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 28)) arg28.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 29)) arg29.decRef();
  break;
}
case 31: {
  F31 f = reinterpret_cast<F31>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg17 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg18 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg19 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg20 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg21 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg22 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg23 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg24 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg25 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg26 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg27 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg28 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg29 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg30 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28, arg29, arg30);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 17)) arg17.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 18)) arg18.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 19)) arg19.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 20)) arg20.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 21)) arg21.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 22)) arg22.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 23)) arg23.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 24)) arg24.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 25)) arg25.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 26)) arg26.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 27)) arg27.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 28)) arg28.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 29)) arg29.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 30)) arg30.decRef();
  break;
}
case 32: {
  F32 f = reinterpret_cast<F32>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg17 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg18 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg19 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg20 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg21 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg22 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg23 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg24 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg25 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg26 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg27 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg28 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg29 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg30 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg31 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28, arg29, arg30, arg31);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 17)) arg17.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 18)) arg18.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 19)) arg19.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 20)) arg20.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 21)) arg21.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 22)) arg22.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 23)) arg23.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 24)) arg24.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 25)) arg25.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 26)) arg26.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 27)) arg27.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 28)) arg28.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 29)) arg29.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 30)) arg30.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 31)) arg31.decRef();
  break;
}
case 33: {
  F33 f = reinterpret_cast<F33>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg17 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg18 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg19 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg20 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg21 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg22 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg23 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg24 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg25 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg26 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg27 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg28 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg29 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg30 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg31 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg32 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28, arg29, arg30, arg31, arg32);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 17)) arg17.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 18)) arg18.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 19)) arg19.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 20)) arg20.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 21)) arg21.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 22)) arg22.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 23)) arg23.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 24)) arg24.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 25)) arg25.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 26)) arg26.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 27)) arg27.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 28)) arg28.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 29)) arg29.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 30)) arg30.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 31)) arg31.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 32)) arg32.decRef();
  break;
}
case 34: {
  F34 f = reinterpret_cast<F34>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg17 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg18 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg19 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg20 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg21 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg22 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg23 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg24 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg25 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg26 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg27 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg28 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg29 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg30 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg31 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg32 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg33 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28, arg29, arg30, arg31, arg32, arg33);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 17)) arg17.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 18)) arg18.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 19)) arg19.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 20)) arg20.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 21)) arg21.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 22)) arg22.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 23)) arg23.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 24)) arg24.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 25)) arg25.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 26)) arg26.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 27)) arg27.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 28)) arg28.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 29)) arg29.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 30)) arg30.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 31)) arg31.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 32)) arg32.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 33)) arg33.decRef();
  break;
}
case 35: {
  F35 f = reinterpret_cast<F35>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg17 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg18 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg19 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg20 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg21 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg22 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg23 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg24 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg25 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg26 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg27 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg28 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg29 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg30 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg31 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg32 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg33 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg34 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28, arg29, arg30, arg31, arg32, arg33, arg34);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 17)) arg17.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 18)) arg18.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 19)) arg19.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 20)) arg20.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 21)) arg21.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 22)) arg22.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 23)) arg23.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 24)) arg24.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 25)) arg25.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 26)) arg26.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 27)) arg27.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 28)) arg28.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 29)) arg29.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 30)) arg30.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 31)) arg31.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 32)) arg32.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 33)) arg33.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 34)) arg34.decRef();
  break;
}
case 36: {
  F36 f = reinterpret_cast<F36>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg17 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg18 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg19 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg20 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg21 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg22 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg23 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg24 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg25 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg26 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg27 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg28 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg29 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg30 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg31 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg32 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg33 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg34 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg35 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28, arg29, arg30, arg31, arg32, arg33, arg34, arg35);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 17)) arg17.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 18)) arg18.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 19)) arg19.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 20)) arg20.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 21)) arg21.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 22)) arg22.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 23)) arg23.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 24)) arg24.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 25)) arg25.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 26)) arg26.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 27)) arg27.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 28)) arg28.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 29)) arg29.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 30)) arg30.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 31)) arg31.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 32)) arg32.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 33)) arg33.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 34)) arg34.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 35)) arg35.decRef();
  break;
}
case 37: {
  F37 f = reinterpret_cast<F37>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg17 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg18 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg19 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg20 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg21 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg22 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg23 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg24 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg25 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg26 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg27 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg28 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg29 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg30 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg31 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg32 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg33 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg34 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg35 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg36 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28, arg29, arg30, arg31, arg32, arg33, arg34, arg35, arg36);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 17)) arg17.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 18)) arg18.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 19)) arg19.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 20)) arg20.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 21)) arg21.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 22)) arg22.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 23)) arg23.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 24)) arg24.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 25)) arg25.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 26)) arg26.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 27)) arg27.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 28)) arg28.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 29)) arg29.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 30)) arg30.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 31)) arg31.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 32)) arg32.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 33)) arg33.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 34)) arg34.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 35)) arg35.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 36)) arg36.decRef();
  break;
}
case 38: {
  F38 f = reinterpret_cast<F38>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg17 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg18 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg19 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg20 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg21 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg22 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg23 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg24 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg25 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg26 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg27 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg28 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg29 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg30 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg31 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg32 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg33 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg34 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg35 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg36 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg37 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28, arg29, arg30, arg31, arg32, arg33, arg34, arg35, arg36, arg37);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 17)) arg17.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 18)) arg18.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 19)) arg19.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 20)) arg20.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 21)) arg21.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 22)) arg22.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 23)) arg23.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 24)) arg24.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 25)) arg25.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 26)) arg26.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 27)) arg27.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 28)) arg28.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 29)) arg29.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 30)) arg30.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 31)) arg31.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 32)) arg32.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 33)) arg33.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 34)) arg34.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 35)) arg35.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 36)) arg36.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 37)) arg37.decRef();
  break;
}
case 39: {
  F39 f = reinterpret_cast<F39>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg17 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg18 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg19 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg20 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg21 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg22 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg23 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg24 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg25 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg26 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg27 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg28 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg29 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg30 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg31 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg32 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg33 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg34 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg35 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg36 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg37 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg38 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28, arg29, arg30, arg31, arg32, arg33, arg34, arg35, arg36, arg37, arg38);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 17)) arg17.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 18)) arg18.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 19)) arg19.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 20)) arg20.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 21)) arg21.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 22)) arg22.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 23)) arg23.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 24)) arg24.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 25)) arg25.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 26)) arg26.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 27)) arg27.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 28)) arg28.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 29)) arg29.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 30)) arg30.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 31)) arg31.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 32)) arg32.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 33)) arg33.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 34)) arg34.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 35)) arg35.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 36)) arg36.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 37)) arg37.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 38)) arg38.decRef();
  break;
}
case 40: {
  F40 f = reinterpret_cast<F40>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg17 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg18 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg19 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg20 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg21 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg22 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg23 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg24 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg25 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg26 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg27 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg28 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg29 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg30 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg31 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg32 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg33 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg34 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg35 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg36 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg37 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg38 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg39 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28, arg29, arg30, arg31, arg32, arg33, arg34, arg35, arg36, arg37, arg38, arg39);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 17)) arg17.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 18)) arg18.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 19)) arg19.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 20)) arg20.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 21)) arg21.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 22)) arg22.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 23)) arg23.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 24)) arg24.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 25)) arg25.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 26)) arg26.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 27)) arg27.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 28)) arg28.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 29)) arg29.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 30)) arg30.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 31)) arg31.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 32)) arg32.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 33)) arg33.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 34)) arg34.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 35)) arg35.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 36)) arg36.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 37)) arg37.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 38)) arg38.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 39)) arg39.decRef();
  break;
}
case 41: {
  F41 f = reinterpret_cast<F41>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg17 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg18 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg19 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg20 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg21 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg22 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg23 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg24 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg25 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg26 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg27 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg28 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg29 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg30 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg31 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg32 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg33 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg34 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg35 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg36 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg37 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg38 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg39 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg40 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28, arg29, arg30, arg31, arg32, arg33, arg34, arg35, arg36, arg37, arg38, arg39, arg40);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 17)) arg17.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 18)) arg18.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 19)) arg19.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 20)) arg20.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 21)) arg21.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 22)) arg22.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 23)) arg23.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 24)) arg24.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 25)) arg25.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 26)) arg26.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 27)) arg27.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 28)) arg28.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 29)) arg29.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 30)) arg30.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 31)) arg31.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 32)) arg32.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 33)) arg33.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 34)) arg34.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 35)) arg35.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 36)) arg36.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 37)) arg37.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 38)) arg38.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 39)) arg39.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 40)) arg40.decRef();
  break;
}
case 42: {
  F42 f = reinterpret_cast<F42>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg17 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg18 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg19 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg20 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg21 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg22 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg23 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg24 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg25 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg26 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg27 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg28 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg29 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg30 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg31 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg32 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg33 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg34 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg35 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg36 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg37 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg38 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg39 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg40 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg41 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28, arg29, arg30, arg31, arg32, arg33, arg34, arg35, arg36, arg37, arg38, arg39, arg40, arg41);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 17)) arg17.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 18)) arg18.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 19)) arg19.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 20)) arg20.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 21)) arg21.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 22)) arg22.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 23)) arg23.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 24)) arg24.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 25)) arg25.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 26)) arg26.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 27)) arg27.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 28)) arg28.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 29)) arg29.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 30)) arg30.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 31)) arg31.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 32)) arg32.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 33)) arg33.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 34)) arg34.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 35)) arg35.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 36)) arg36.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 37)) arg37.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 38)) arg38.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 39)) arg39.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 40)) arg40.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 41)) arg41.decRef();
  break;
}
case 43: {
  F43 f = reinterpret_cast<F43>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg17 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg18 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg19 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg20 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg21 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg22 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg23 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg24 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg25 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg26 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg27 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg28 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg29 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg30 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg31 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg32 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg33 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg34 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg35 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg36 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg37 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg38 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg39 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg40 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg41 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg42 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28, arg29, arg30, arg31, arg32, arg33, arg34, arg35, arg36, arg37, arg38, arg39, arg40, arg41, arg42);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 17)) arg17.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 18)) arg18.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 19)) arg19.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 20)) arg20.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 21)) arg21.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 22)) arg22.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 23)) arg23.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 24)) arg24.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 25)) arg25.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 26)) arg26.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 27)) arg27.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 28)) arg28.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 29)) arg29.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 30)) arg30.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 31)) arg31.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 32)) arg32.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 33)) arg33.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 34)) arg34.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 35)) arg35.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 36)) arg36.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 37)) arg37.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 38)) arg38.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 39)) arg39.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 40)) arg40.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 41)) arg41.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 42)) arg42.decRef();
  break;
}
case 44: {
  F44 f = reinterpret_cast<F44>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg17 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg18 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg19 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg20 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg21 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg22 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg23 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg24 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg25 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg26 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg27 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg28 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg29 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg30 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg31 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg32 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg33 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg34 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg35 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg36 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg37 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg38 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg39 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg40 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg41 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg42 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg43 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28, arg29, arg30, arg31, arg32, arg33, arg34, arg35, arg36, arg37, arg38, arg39, arg40, arg41, arg42, arg43);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 17)) arg17.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 18)) arg18.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 19)) arg19.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 20)) arg20.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 21)) arg21.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 22)) arg22.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 23)) arg23.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 24)) arg24.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 25)) arg25.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 26)) arg26.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 27)) arg27.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 28)) arg28.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 29)) arg29.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 30)) arg30.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 31)) arg31.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 32)) arg32.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 33)) arg33.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 34)) arg34.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 35)) arg35.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 36)) arg36.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 37)) arg37.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 38)) arg38.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 39)) arg39.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 40)) arg40.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 41)) arg41.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 42)) arg42.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 43)) arg43.decRef();
  break;
}
case 45: {
  F45 f = reinterpret_cast<F45>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg17 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg18 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg19 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg20 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg21 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg22 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg23 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg24 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg25 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg26 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg27 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg28 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg29 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg30 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg31 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg32 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg33 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg34 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg35 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg36 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg37 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg38 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg39 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg40 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg41 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg42 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg43 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg44 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28, arg29, arg30, arg31, arg32, arg33, arg34, arg35, arg36, arg37, arg38, arg39, arg40, arg41, arg42, arg43, arg44);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 17)) arg17.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 18)) arg18.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 19)) arg19.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 20)) arg20.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 21)) arg21.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 22)) arg22.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 23)) arg23.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 24)) arg24.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 25)) arg25.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 26)) arg26.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 27)) arg27.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 28)) arg28.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 29)) arg29.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 30)) arg30.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 31)) arg31.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 32)) arg32.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 33)) arg33.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 34)) arg34.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 35)) arg35.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 36)) arg36.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 37)) arg37.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 38)) arg38.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 39)) arg39.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 40)) arg40.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 41)) arg41.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 42)) arg42.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 43)) arg43.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 44)) arg44.decRef();
  break;
}
case 46: {
  F46 f = reinterpret_cast<F46>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg17 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg18 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg19 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg20 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg21 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg22 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg23 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg24 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg25 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg26 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg27 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg28 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg29 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg30 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg31 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg32 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg33 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg34 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg35 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg36 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg37 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg38 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg39 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg40 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg41 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg42 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg43 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg44 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg45 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28, arg29, arg30, arg31, arg32, arg33, arg34, arg35, arg36, arg37, arg38, arg39, arg40, arg41, arg42, arg43, arg44, arg45);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 17)) arg17.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 18)) arg18.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 19)) arg19.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 20)) arg20.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 21)) arg21.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 22)) arg22.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 23)) arg23.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 24)) arg24.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 25)) arg25.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 26)) arg26.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 27)) arg27.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 28)) arg28.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 29)) arg29.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 30)) arg30.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 31)) arg31.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 32)) arg32.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 33)) arg33.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 34)) arg34.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 35)) arg35.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 36)) arg36.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 37)) arg37.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 38)) arg38.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 39)) arg39.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 40)) arg40.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 41)) arg41.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 42)) arg42.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 43)) arg43.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 44)) arg44.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 45)) arg45.decRef();
  break;
}
case 47: {
  F47 f = reinterpret_cast<F47>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg17 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg18 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg19 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg20 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg21 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg22 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg23 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg24 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg25 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg26 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg27 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg28 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg29 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg30 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg31 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg32 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg33 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg34 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg35 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg36 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg37 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg38 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg39 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg40 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg41 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg42 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg43 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg44 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg45 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg46 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28, arg29, arg30, arg31, arg32, arg33, arg34, arg35, arg36, arg37, arg38, arg39, arg40, arg41, arg42, arg43, arg44, arg45, arg46);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 17)) arg17.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 18)) arg18.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 19)) arg19.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 20)) arg20.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 21)) arg21.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 22)) arg22.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 23)) arg23.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 24)) arg24.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 25)) arg25.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 26)) arg26.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 27)) arg27.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 28)) arg28.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 29)) arg29.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 30)) arg30.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 31)) arg31.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 32)) arg32.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 33)) arg33.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 34)) arg34.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 35)) arg35.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 36)) arg36.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 37)) arg37.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 38)) arg38.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 39)) arg39.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 40)) arg40.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 41)) arg41.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 42)) arg42.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 43)) arg43.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 44)) arg44.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 45)) arg45.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 46)) arg46.decRef();
  break;
}
case 48: {
  F48 f = reinterpret_cast<F48>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg17 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg18 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg19 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg20 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg21 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg22 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg23 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg24 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg25 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg26 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg27 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg28 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg29 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg30 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg31 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg32 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg33 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg34 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg35 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg36 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg37 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg38 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg39 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg40 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg41 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg42 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg43 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg44 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg45 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg46 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg47 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28, arg29, arg30, arg31, arg32, arg33, arg34, arg35, arg36, arg37, arg38, arg39, arg40, arg41, arg42, arg43, arg44, arg45, arg46, arg47);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 17)) arg17.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 18)) arg18.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 19)) arg19.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 20)) arg20.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 21)) arg21.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 22)) arg22.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 23)) arg23.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 24)) arg24.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 25)) arg25.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 26)) arg26.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 27)) arg27.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 28)) arg28.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 29)) arg29.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 30)) arg30.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 31)) arg31.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 32)) arg32.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 33)) arg33.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 34)) arg34.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 35)) arg35.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 36)) arg36.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 37)) arg37.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 38)) arg38.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 39)) arg39.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 40)) arg40.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 41)) arg41.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 42)) arg42.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 43)) arg43.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 44)) arg44.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 45)) arg45.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 46)) arg46.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 47)) arg47.decRef();
  break;
}
case 49: {
  F49 f = reinterpret_cast<F49>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg17 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg18 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg19 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg20 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg21 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg22 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg23 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg24 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg25 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg26 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg27 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg28 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg29 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg30 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg31 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg32 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg33 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg34 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg35 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg36 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg37 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg38 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg39 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg40 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg41 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg42 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg43 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg44 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg45 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg46 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg47 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg48 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28, arg29, arg30, arg31, arg32, arg33, arg34, arg35, arg36, arg37, arg38, arg39, arg40, arg41, arg42, arg43, arg44, arg45, arg46, arg47, arg48);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 17)) arg17.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 18)) arg18.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 19)) arg19.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 20)) arg20.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 21)) arg21.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 22)) arg22.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 23)) arg23.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 24)) arg24.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 25)) arg25.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 26)) arg26.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 27)) arg27.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 28)) arg28.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 29)) arg29.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 30)) arg30.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 31)) arg31.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 32)) arg32.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 33)) arg33.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 34)) arg34.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 35)) arg35.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 36)) arg36.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 37)) arg37.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 38)) arg38.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 39)) arg39.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 40)) arg40.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 41)) arg41.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 42)) arg42.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 43)) arg43.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 44)) arg44.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 45)) arg45.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 46)) arg46.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 47)) arg47.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 48)) arg48.decRef();
  break;
}
case 50: {
  F50 f = reinterpret_cast<F50>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg17 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg18 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg19 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg20 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg21 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg22 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg23 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg24 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg25 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg26 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg27 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg28 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg29 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg30 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg31 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg32 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg33 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg34 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg35 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg36 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg37 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg38 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg39 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg40 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg41 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg42 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg43 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg44 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg45 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg46 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg47 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg48 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg49 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28, arg29, arg30, arg31, arg32, arg33, arg34, arg35, arg36, arg37, arg38, arg39, arg40, arg41, arg42, arg43, arg44, arg45, arg46, arg47, arg48, arg49);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 17)) arg17.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 18)) arg18.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 19)) arg19.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 20)) arg20.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 21)) arg21.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 22)) arg22.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 23)) arg23.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 24)) arg24.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 25)) arg25.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 26)) arg26.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 27)) arg27.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 28)) arg28.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 29)) arg29.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 30)) arg30.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 31)) arg31.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 32)) arg32.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 33)) arg33.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 34)) arg34.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 35)) arg35.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 36)) arg36.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 37)) arg37.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 38)) arg38.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 39)) arg39.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 40)) arg40.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 41)) arg41.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 42)) arg42.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 43)) arg43.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 44)) arg44.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 45)) arg45.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 46)) arg46.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 47)) arg47.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 48)) arg48.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 49)) arg49.decRef();
  break;
}
case 51: {
  F51 f = reinterpret_cast<F51>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg17 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg18 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg19 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg20 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg21 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg22 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg23 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg24 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg25 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg26 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg27 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg28 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg29 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg30 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg31 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg32 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg33 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg34 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg35 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg36 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg37 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg38 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg39 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg40 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg41 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg42 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg43 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg44 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg45 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg46 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg47 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg48 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg49 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg50 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28, arg29, arg30, arg31, arg32, arg33, arg34, arg35, arg36, arg37, arg38, arg39, arg40, arg41, arg42, arg43, arg44, arg45, arg46, arg47, arg48, arg49, arg50);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 17)) arg17.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 18)) arg18.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 19)) arg19.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 20)) arg20.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 21)) arg21.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 22)) arg22.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 23)) arg23.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 24)) arg24.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 25)) arg25.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 26)) arg26.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 27)) arg27.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 28)) arg28.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 29)) arg29.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 30)) arg30.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 31)) arg31.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 32)) arg32.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 33)) arg33.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 34)) arg34.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 35)) arg35.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 36)) arg36.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 37)) arg37.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 38)) arg38.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 39)) arg39.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 40)) arg40.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 41)) arg41.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 42)) arg42.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 43)) arg43.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 44)) arg44.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 45)) arg45.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 46)) arg46.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 47)) arg47.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 48)) arg48.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 49)) arg49.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 50)) arg50.decRef();
  break;
}
case 52: {
  F52 f = reinterpret_cast<F52>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg17 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg18 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg19 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg20 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg21 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg22 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg23 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg24 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg25 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg26 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg27 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg28 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg29 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg30 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg31 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg32 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg33 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg34 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg35 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg36 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg37 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg38 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg39 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg40 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg41 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg42 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg43 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg44 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg45 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg46 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg47 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg48 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg49 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg50 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg51 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28, arg29, arg30, arg31, arg32, arg33, arg34, arg35, arg36, arg37, arg38, arg39, arg40, arg41, arg42, arg43, arg44, arg45, arg46, arg47, arg48, arg49, arg50, arg51);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 17)) arg17.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 18)) arg18.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 19)) arg19.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 20)) arg20.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 21)) arg21.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 22)) arg22.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 23)) arg23.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 24)) arg24.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 25)) arg25.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 26)) arg26.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 27)) arg27.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 28)) arg28.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 29)) arg29.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 30)) arg30.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 31)) arg31.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 32)) arg32.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 33)) arg33.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 34)) arg34.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 35)) arg35.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 36)) arg36.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 37)) arg37.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 38)) arg38.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 39)) arg39.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 40)) arg40.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 41)) arg41.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 42)) arg42.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 43)) arg43.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 44)) arg44.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 45)) arg45.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 46)) arg46.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 47)) arg47.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 48)) arg48.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 49)) arg49.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 50)) arg50.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 51)) arg51.decRef();
  break;
}
case 53: {
  F53 f = reinterpret_cast<F53>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg17 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg18 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg19 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg20 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg21 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg22 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg23 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg24 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg25 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg26 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg27 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg28 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg29 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg30 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg31 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg32 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg33 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg34 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg35 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg36 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg37 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg38 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg39 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg40 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg41 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg42 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg43 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg44 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg45 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg46 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg47 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg48 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg49 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg50 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg51 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg52 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28, arg29, arg30, arg31, arg32, arg33, arg34, arg35, arg36, arg37, arg38, arg39, arg40, arg41, arg42, arg43, arg44, arg45, arg46, arg47, arg48, arg49, arg50, arg51, arg52);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 17)) arg17.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 18)) arg18.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 19)) arg19.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 20)) arg20.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 21)) arg21.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 22)) arg22.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 23)) arg23.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 24)) arg24.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 25)) arg25.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 26)) arg26.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 27)) arg27.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 28)) arg28.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 29)) arg29.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 30)) arg30.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 31)) arg31.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 32)) arg32.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 33)) arg33.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 34)) arg34.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 35)) arg35.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 36)) arg36.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 37)) arg37.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 38)) arg38.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 39)) arg39.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 40)) arg40.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 41)) arg41.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 42)) arg42.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 43)) arg43.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 44)) arg44.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 45)) arg45.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 46)) arg46.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 47)) arg47.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 48)) arg48.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 49)) arg49.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 50)) arg50.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 51)) arg51.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 52)) arg52.decRef();
  break;
}
case 54: {
  F54 f = reinterpret_cast<F54>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg17 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg18 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg19 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg20 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg21 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg22 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg23 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg24 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg25 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg26 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg27 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg28 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg29 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg30 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg31 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg32 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg33 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg34 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg35 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg36 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg37 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg38 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg39 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg40 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg41 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg42 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg43 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg44 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg45 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg46 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg47 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg48 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg49 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg50 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg51 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg52 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg53 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28, arg29, arg30, arg31, arg32, arg33, arg34, arg35, arg36, arg37, arg38, arg39, arg40, arg41, arg42, arg43, arg44, arg45, arg46, arg47, arg48, arg49, arg50, arg51, arg52, arg53);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 17)) arg17.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 18)) arg18.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 19)) arg19.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 20)) arg20.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 21)) arg21.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 22)) arg22.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 23)) arg23.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 24)) arg24.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 25)) arg25.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 26)) arg26.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 27)) arg27.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 28)) arg28.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 29)) arg29.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 30)) arg30.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 31)) arg31.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 32)) arg32.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 33)) arg33.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 34)) arg34.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 35)) arg35.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 36)) arg36.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 37)) arg37.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 38)) arg38.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 39)) arg39.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 40)) arg40.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 41)) arg41.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 42)) arg42.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 43)) arg43.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 44)) arg44.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 45)) arg45.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 46)) arg46.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 47)) arg47.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 48)) arg48.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 49)) arg49.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 50)) arg50.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 51)) arg51.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 52)) arg52.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 53)) arg53.decRef();
  break;
}
case 55: {
  F55 f = reinterpret_cast<F55>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg17 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg18 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg19 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg20 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg21 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg22 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg23 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg24 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg25 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg26 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg27 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg28 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg29 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg30 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg31 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg32 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg33 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg34 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg35 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg36 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg37 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg38 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg39 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg40 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg41 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg42 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg43 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg44 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg45 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg46 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg47 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg48 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg49 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg50 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg51 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg52 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg53 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg54 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28, arg29, arg30, arg31, arg32, arg33, arg34, arg35, arg36, arg37, arg38, arg39, arg40, arg41, arg42, arg43, arg44, arg45, arg46, arg47, arg48, arg49, arg50, arg51, arg52, arg53, arg54);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 17)) arg17.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 18)) arg18.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 19)) arg19.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 20)) arg20.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 21)) arg21.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 22)) arg22.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 23)) arg23.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 24)) arg24.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 25)) arg25.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 26)) arg26.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 27)) arg27.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 28)) arg28.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 29)) arg29.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 30)) arg30.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 31)) arg31.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 32)) arg32.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 33)) arg33.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 34)) arg34.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 35)) arg35.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 36)) arg36.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 37)) arg37.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 38)) arg38.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 39)) arg39.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 40)) arg40.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 41)) arg41.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 42)) arg42.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 43)) arg43.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 44)) arg44.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 45)) arg45.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 46)) arg46.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 47)) arg47.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 48)) arg48.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 49)) arg49.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 50)) arg50.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 51)) arg51.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 52)) arg52.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 53)) arg53.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 54)) arg54.decRef();
  break;
}
case 56: {
  F56 f = reinterpret_cast<F56>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg17 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg18 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg19 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg20 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg21 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg22 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg23 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg24 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg25 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg26 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg27 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg28 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg29 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg30 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg31 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg32 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg33 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg34 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg35 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg36 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg37 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg38 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg39 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg40 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg41 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg42 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg43 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg44 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg45 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg46 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg47 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg48 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg49 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg50 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg51 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg52 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg53 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg54 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg55 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28, arg29, arg30, arg31, arg32, arg33, arg34, arg35, arg36, arg37, arg38, arg39, arg40, arg41, arg42, arg43, arg44, arg45, arg46, arg47, arg48, arg49, arg50, arg51, arg52, arg53, arg54, arg55);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 17)) arg17.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 18)) arg18.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 19)) arg19.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 20)) arg20.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 21)) arg21.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 22)) arg22.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 23)) arg23.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 24)) arg24.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 25)) arg25.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 26)) arg26.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 27)) arg27.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 28)) arg28.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 29)) arg29.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 30)) arg30.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 31)) arg31.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 32)) arg32.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 33)) arg33.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 34)) arg34.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 35)) arg35.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 36)) arg36.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 37)) arg37.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 38)) arg38.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 39)) arg39.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 40)) arg40.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 41)) arg41.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 42)) arg42.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 43)) arg43.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 44)) arg44.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 45)) arg45.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 46)) arg46.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 47)) arg47.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 48)) arg48.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 49)) arg49.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 50)) arg50.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 51)) arg51.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 52)) arg52.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 53)) arg53.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 54)) arg54.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 55)) arg55.decRef();
  break;
}
case 57: {
  F57 f = reinterpret_cast<F57>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg17 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg18 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg19 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg20 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg21 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg22 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg23 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg24 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg25 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg26 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg27 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg28 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg29 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg30 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg31 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg32 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg33 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg34 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg35 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg36 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg37 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg38 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg39 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg40 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg41 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg42 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg43 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg44 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg45 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg46 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg47 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg48 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg49 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg50 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg51 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg52 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg53 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg54 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg55 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg56 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28, arg29, arg30, arg31, arg32, arg33, arg34, arg35, arg36, arg37, arg38, arg39, arg40, arg41, arg42, arg43, arg44, arg45, arg46, arg47, arg48, arg49, arg50, arg51, arg52, arg53, arg54, arg55, arg56);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 17)) arg17.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 18)) arg18.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 19)) arg19.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 20)) arg20.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 21)) arg21.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 22)) arg22.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 23)) arg23.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 24)) arg24.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 25)) arg25.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 26)) arg26.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 27)) arg27.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 28)) arg28.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 29)) arg29.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 30)) arg30.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 31)) arg31.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 32)) arg32.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 33)) arg33.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 34)) arg34.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 35)) arg35.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 36)) arg36.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 37)) arg37.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 38)) arg38.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 39)) arg39.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 40)) arg40.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 41)) arg41.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 42)) arg42.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 43)) arg43.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 44)) arg44.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 45)) arg45.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 46)) arg46.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 47)) arg47.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 48)) arg48.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 49)) arg49.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 50)) arg50.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 51)) arg51.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 52)) arg52.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 53)) arg53.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 54)) arg54.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 55)) arg55.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 56)) arg56.decRef();
  break;
}
case 58: {
  F58 f = reinterpret_cast<F58>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg17 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg18 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg19 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg20 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg21 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg22 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg23 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg24 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg25 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg26 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg27 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg28 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg29 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg30 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg31 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg32 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg33 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg34 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg35 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg36 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg37 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg38 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg39 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg40 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg41 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg42 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg43 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg44 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg45 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg46 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg47 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg48 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg49 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg50 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg51 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg52 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg53 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg54 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg55 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg56 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg57 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28, arg29, arg30, arg31, arg32, arg33, arg34, arg35, arg36, arg37, arg38, arg39, arg40, arg41, arg42, arg43, arg44, arg45, arg46, arg47, arg48, arg49, arg50, arg51, arg52, arg53, arg54, arg55, arg56, arg57);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 17)) arg17.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 18)) arg18.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 19)) arg19.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 20)) arg20.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 21)) arg21.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 22)) arg22.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 23)) arg23.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 24)) arg24.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 25)) arg25.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 26)) arg26.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 27)) arg27.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 28)) arg28.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 29)) arg29.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 30)) arg30.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 31)) arg31.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 32)) arg32.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 33)) arg33.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 34)) arg34.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 35)) arg35.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 36)) arg36.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 37)) arg37.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 38)) arg38.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 39)) arg39.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 40)) arg40.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 41)) arg41.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 42)) arg42.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 43)) arg43.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 44)) arg44.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 45)) arg45.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 46)) arg46.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 47)) arg47.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 48)) arg48.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 49)) arg49.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 50)) arg50.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 51)) arg51.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 52)) arg52.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 53)) arg53.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 54)) arg54.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 55)) arg55.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 56)) arg56.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 57)) arg57.decRef();
  break;
}
case 59: {
  F59 f = reinterpret_cast<F59>(function_ptr);
  venom_cell arg0 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg1 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg2 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg3 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg4 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg5 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg6 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg7 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg8 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg9 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg10 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg11 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg12 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg13 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg14 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg15 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg16 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg17 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg18 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg19 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg20 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg21 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg22 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg23 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg24 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg25 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg26 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg27 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg28 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg29 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg30 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg31 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg32 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg33 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg34 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg35 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg36 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg37 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg38 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg39 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg40 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg41 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg42 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg43 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg44 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg45 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg46 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg47 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg48 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg49 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg50 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg51 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg52 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg53 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg54 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg55 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg56 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg57 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_cell arg58 = ctx->program_stack.top(); ctx->program_stack.pop();
  venom_ret_cell ret = f(ctx, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28, arg29, arg30, arg31, arg32, arg33, arg34, arg35, arg36, arg37, arg38, arg39, arg40, arg41, arg42, arg43, arg44, arg45, arg46, arg47, arg48, arg49, arg50, arg51, arg52, arg53, arg54, arg55, arg56, arg57, arg58);
  ctx->program_stack.push(ret);
  if (arg_ref_cell_bitmap & (0x1UL << 0)) arg0.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 1)) arg1.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 2)) arg2.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 3)) arg3.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 4)) arg4.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 5)) arg5.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 6)) arg6.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 7)) arg7.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 8)) arg8.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 9)) arg9.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 10)) arg10.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 11)) arg11.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 12)) arg12.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 13)) arg13.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 14)) arg14.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 15)) arg15.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 16)) arg16.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 17)) arg17.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 18)) arg18.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 19)) arg19.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 20)) arg20.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 21)) arg21.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 22)) arg22.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 23)) arg23.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 24)) arg24.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 25)) arg25.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 26)) arg26.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 27)) arg27.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 28)) arg28.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 29)) arg29.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 30)) arg30.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 31)) arg31.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 32)) arg32.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 33)) arg33.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 34)) arg34.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 35)) arg35.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 36)) arg36.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 37)) arg37.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 38)) arg38.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 39)) arg39.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 40)) arg40.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 41)) arg41.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 42)) arg42.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 43)) arg43.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 44)) arg44.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 45)) arg45.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 46)) arg46.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 47)) arg47.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 48)) arg48.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 49)) arg49.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 50)) arg50.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 51)) arg51.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 52)) arg52.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 53)) arg53.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 54)) arg54.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 55)) arg55.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 56)) arg56.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 57)) arg57.decRef();
  if (arg_ref_cell_bitmap & (0x1UL << 58)) arg58.decRef();
  break;
}
